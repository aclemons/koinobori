---

name: Build and push docker image

on:
  push:
    branches: master

env:
  AWS_DEFAULT_REGION: eu-central-1
  SESSION_DURATION: 900

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false


jobs:
  docker:
    name: Build and push
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Compute git sha
        run: echo "DOCKER_IMAGE_VERSION=git$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/koinobori-automation
          role-duration-seconds: ${{ env.SESSION_DURATION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          mask-password: 'true'

      - name: Build and push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          push: true
          platforms: linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: docker/koinobori/Dockerfile
          provenance: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/koinobori:latest
            ghcr.io/${{ github.repository_owner }}/koinobori:${{ env.DOCKER_IMAGE_VERSION }}
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/koinobori/dev:latest
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/koinobori/dev:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Update lambdas
        run: |
          aws lambda update-function-code --function-name koinobori-dev-migrations --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/koinobori/dev:latest
          aws lambda wait function-active --function-name koinobori-dev-migrations

          aws lambda invoke --cli-read-timeout 0 --function-name koinobori-dev-migrations _response.json

          cat _response.json
          rm _response.json

          aws lambda wait function-active --function-name koinobori-dev-api
          aws lambda update-function-code --function-name koinobori-dev-api --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/koinobori/dev:latest
